selection:
   ### use `&`, `|`, `~` for logical operations on numpy arrays
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   >-
   (jet_hlt_pt>200) & (jet_hlt_pt<2500) & (jet_hlt_genmatch_pt>0) & (event%7!=0) & (jet_hlt_mass_truth>=40) & (jet_hlt_mass_truth<=220) &
   (((jet_hlt_flav_2prong_partonjet_match==-1) & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)) |
    ((jet_hlt_flav_2prong_partonjet_match>=3)  & (jet_hlt_flav_2prong_partonjet_match<=6) & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)) |
    ((jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==2) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)) |
    ((jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==1) & (jet_hlt_muflav==1) & (jet_hlt_elflav==0)) |
    ((jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==1) & (jet_hlt_muflav==0) & (jet_hlt_elflav==1)))

test_time_selection:
   >-
   (jet_hlt_pt>200) & (jet_hlt_pt<2500) & (jet_hlt_genmatch_pt>0) & (event%7==0) & (jet_hlt_mass_truth>=40) & (jet_hlt_mass_truth<=220) &
   (((jet_hlt_flav_2prong_partonjet_match==-1) & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)) |
    ((jet_hlt_flav_2prong_partonjet_match>=3)  & (jet_hlt_flav_2prong_partonjet_match<=6) & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)) |
    ((jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==2) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)) |
    ((jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==1) & (jet_hlt_muflav==1) & (jet_hlt_elflav==0)) |
    ((jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==1) & (jet_hlt_muflav==0) & (jet_hlt_elflav==1)))

new_variables:
   ### [format] name: formula
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   pfcand_mask: ak.ones_like(jet_hlt_pfcand_deta)
   sv_mask: ak.ones_like(jet_hlt_sv_deta)
   label_H_mm: (jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==0) & (jet_hlt_muflav==2) & (jet_hlt_elflav==0)
   label_H_ee: (jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==2)
   label_H_me: (jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==0) & (jet_hlt_muflav==1) & (jet_hlt_elflav==1)
   label_H_te: (jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==1) & (jet_hlt_muflav==0) & (jet_hlt_elflav==1)
   label_H_tm: (jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==1) & (jet_hlt_muflav==1) & (jet_hlt_elflav==0)
   label_H_tt: (jet_hlt_flav_2prong_partonjet_match==7)  & (jet_hlt_tauflav==2) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)
   label_H_bb: (jet_hlt_flav_2prong_partonjet_match==6)  & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)
   label_H_cc: (jet_hlt_flav_2prong_partonjet_match==5)  & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)
   label_H_qq: (jet_hlt_flav_2prong_partonjet_match==4)  & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)
   label_H_gg: (jet_hlt_flav_2prong_partonjet_match==3)  & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0)
   label_QCD_2hf: (jet_hlt_flav_2prong_partonjet_match==-1) & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0) & ((jet_hlt_nbhad>=2) | ((jet_hlt_nbhad==0) & (jet_hlt_nchad>=2)))
   label_QCD_1hf: (jet_hlt_flav_2prong_partonjet_match==-1) & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0) & ((jet_hlt_nbhad==1) | ((jet_hlt_nbhad==0) & (jet_hlt_nchad==1)))
   label_QCD_0hf: (jet_hlt_flav_2prong_partonjet_match==-1) & (jet_hlt_tauflav==0) & (jet_hlt_muflav==0) & (jet_hlt_elflav==0) & (jet_hlt_nbhad==0) & (jet_hlt_nchad==0)

preprocess:
   ### method: [manual, auto] - whether to use manually specified paraweaver-job-ak4-taumuel-domain-eval-alphameters for variable standardization
   method: manual
   ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
   data_fraction:

inputs:
   pf_points:
      length: 100
      vars:
         - [jet_hlt_pfcand_deta, null]
         - [jet_hlt_pfcand_dphi, null]
   pf_features:
      length: 100
      vars:
         ### [format 1]: var_name (no transformation)
         ### [format 2]: [var_name,
         ###              subtract_by(optional, default=None, no transf. if preprocess.method=manual, auto transf. if preprocess.method=auto),
         ###              multiply_by(optional, default=1),
         ###              clip_min(optional, default=-5),
         ###              clip_max(optional, default=5),
         ###              pad_value(optional, default=0)]
         - [jet_hlt_pfcand_pt_log, 1, 0.5]
         - [jet_hlt_pfcand_energy_log, 1, 0.5]
         - [jet_hlt_pfcand_eta, 0, 0.8]
         - [jet_hlt_pfcand_deta, null]
         - [jet_hlt_pfcand_dphi, null]
         - [jet_hlt_pfcand_charge, null]
         - [jet_hlt_pfcand_frompv, 2, 1]
         - [jet_hlt_pfcand_nlostinnerhits, null]
         - [jet_hlt_pfcand_track_chi2, 1, 0.2]
         - [jet_hlt_pfcand_track_qual, 0, 0.2]
         - [jet_hlt_pfcand_dz, 0, 0.1, -10, 10]
         - [jet_hlt_pfcand_dzsig, 0, 0.01]
         - [jet_hlt_pfcand_dxy, 0, 0.25, -25, 25]
         - [jet_hlt_pfcand_dxysig, 0.01]
         - [jet_hlt_pfcand_etarel, 1.5, 0.5]
         - [jet_hlt_pfcand_pperp_ratio, 0, 1]
         - [jet_hlt_pfcand_ppara_ratio, 0, 1]
         - [jet_hlt_pfcand_trackjet_d3d, 0, 0.1]
         - [jet_hlt_pfcand_trackjet_d3dsig, 0, 0.005]
         - [jet_hlt_pfcand_trackjet_dist, 0, 0.1]
         - [jet_hlt_pfcand_trackjet_decayL, 0, 0.01]
         - [jet_hlt_pfcand_npixhits, 0, 0.1]
         - [jet_hlt_pfcand_nstriphits, 0, 0.1]
         #- [jet_hlt_pfcand_id, 2, 0.2]
         #- [jet_hlt_pfcand_hcalfraction, 0, 1, 0, 1]
         #- [jet_hlt_pfcand_calofraction, 0, 1, 0, 5]
   pf_mask:
      length: 100
      vars:
         - [pfcand_mask, null]
   sv_points:
      length: 10
      vars:
         - [jet_hlt_sv_deta, null]
         - [jet_hlt_sv_dphi, null]
   sv_features:
      length: 10
      vars:
         - [jet_hlt_sv_pt_log, 3, 0.6]
         - [jet_hlt_sv_mass, 1.2, 0.3]
         - [jet_hlt_sv_deta, null]
         - [jet_hlt_sv_dphi, null]
         - [jet_hlt_sv_ntrack, 3, 1]
         - [jet_hlt_sv_chi2, 1, 0.5]
         - [jet_hlt_sv_dxy, 0.2, 0.25]
         - [jet_hlt_sv_dxysig, 7, 0.02]
         - [jet_hlt_sv_d3d, 0.5, 0.2]
         - [jet_hlt_sv_d3dsig, 7, 0.02]
   sv_mask:
      length: 10
      vars:
         - [sv_mask, null]

labels:
   ### type can be `simple`, `custom`
   ### [option 1] use `simple` for binary/multi-class classification, then `value` is a list of 0-1 labels
   type: simple
   value: [label_H_tt, label_H_tm, label_H_te, label_H_bb, label_H_cc, label_H_qq, label_H_gg, label_QCD_2hf, label_QCD_1hf, label_QCD_0hf]
   ### [option 2] otherwise use `custom` to define the label, then `value` is a map
   # type: custom
   # value:

observers:
   - event
   - rho
   - npv
   - met
   - wgt
   - npu
   - sample
   - jet_hlt_pt
   - jet_hlt_eta
   - jet_hlt_phi
   - jet_hlt_mass
   - jet_hlt_ncand
   - jet_hlt_hflav
   - jet_hlt_pflav
   - jet_hlt_muflav
   - jet_hlt_elflav
   - jet_hlt_tauflav
   - jet_hlt_taudecaymode
   - jet_hlt_lepflav
   - jet_hlt_nbhad
   - jet_hlt_nchad
   - jet_hlt_softdrop_pt
   - jet_hlt_softdrop_eta
   - jet_hlt_softdrop_phi
   - jet_hlt_softdrop_mass
   - jet_hlt_genmatch_pt
   - jet_hlt_genmatch_eta
   - jet_hlt_genmatch_phi
   - jet_hlt_genmatch_mass
   - jet_hlt_softdrop_genmatch_pt
   - jet_hlt_softdrop_genmatch_eta
   - jet_hlt_softdrop_genmatch_phi
   - jet_hlt_softdrop_genmatch_mass
   - jet_hlt_pt_truth
   - jet_hlt_eta_truth
   - jet_hlt_phi_truth
   - jet_hlt_mass_truth
   - jet_recomatch_pnet_probXbb
   - jet_recomatch_pnet_probXcc
   - jet_recomatch_pnet_probXqq
   - jet_recomatch_pnet_probQCDbb
   - jet_recomatch_pnet_probQCDb
   - jet_recomatch_pnet_probQCDcc
   - jet_recomatch_pnet_probQCDc
   - jet_recomatch_pnet_probQCDothers
   - jet_recomatch_pnet_regmass
   - jet_hlt_pnethlt_probXbb
   - jet_hlt_pnethlt_probXcc
   - jet_hlt_pnethlt_probXqq
   - jet_hlt_pnethlt_probXgg
   - jet_hlt_pnethlt_probXtt
   - jet_hlt_pnethlt_probQCD
   - jet_hlt_flav_2prong_partonjet_match
   - jet_hlt_flav_2prong_parton_match

monitor_variables:

weights:
   ### [option 1] use precomputed weights stored in the input files
   # use_precomputed_weights: true
   # weight_branches: [weight, class_weight]
   ### [option 2] compute weights on-the-fly using reweighting histograms
   use_precomputed_weights: false
   reweight_method: flat
   reweight_vars:
      jet_hlt_pt: [200, 250, 315, 396, 499, 628, 791, 995, 2500]
      #jet_hlt_pt: [200, 250, 315, 396, 499, 628, 791, 995, 1253, 1577, 1987, 2500]
      jet_hlt_mass_truth: [ 35, 45, 55, 65, 75, 85, 95, 105, 115, 125, 135, 150, 170, 190, 225]
      #jet_hlt_mass_truth: [25, 35, 45, 55, 65, 75, 85, 95, 105, 115, 125, 135, 150, 170, 190, 215, 250]
   reweight_classes: [label_H_tt, label_H_tm, label_H_te, label_H_bb, label_H_cc, label_H_qq, label_H_gg, label_QCD_2hf, label_QCD_1hf, label_QCD_0hf]
   class_weights: [1.0, 0.3, 0.3, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 4.0]
   reweight_threshold: 15
   reweight_hists:
